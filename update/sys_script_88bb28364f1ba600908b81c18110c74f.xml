<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at/>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_siam_light_outbound_trigger</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_siam_light_outbound_trigger">tableVALCHANGES^EQ<item endquery="false" field="table" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Check outbound triggers</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script>(function executeRule(current, previous /*null when async*/) {&#13;
&#13;
	// Add your code here&#13;
	var table_hierarchy = new GlideTableHierarchy(current.message_type.table);&#13;
	var root_table = table_hierarchy.getBase();&#13;
	&#13;
	// check if trigger BR is existing&#13;
	var grTriggerRule = new GlideRecord('sys_script');&#13;
	grTriggerRule.addQuery('collection', root_table);&#13;
	grTriggerRule.addQuery('name', 'Process outbound triggers (SIAM Light)');&#13;
	grTriggerRule.query();&#13;
	&#13;
	if (!grTriggerRule.next()) {&#13;
		// not there yet, create&#13;
		grTriggerRule.initialize();&#13;
		grTriggerRule.collection = root_table;&#13;
		grTriggerRule.name = 'Process outbound triggers (SIAM Light)';&#13;
		grTriggerRule.active = 'true';&#13;
		grTriggerRule.advanced = 'true';&#13;
		grTriggerRule.action_insert = 'true';&#13;
		grTriggerRule.action_update = 'true';&#13;
		grTriggerRule.condition = 'new SIAMOutboundProcessor().isValidRecord(current)';&#13;
		grTriggerRule.execute_function = 'true';&#13;
		grTriggerRule.script = '&lt;![CDATA[ function onAsync(current) { //This function will be automatically called when this rule is processed. var siam_out = new SIAMOutboundProcessor(); siam_out.createQueueEntry(current); }]]&gt;';&#13;
		grTriggerRule.insert();&#13;
	}&#13;
	&#13;
&#13;
})(current, previous);</script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>daniel.draes</sys_created_by>
        <sys_created_on>2016-11-28 15:40:55</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>88bb28364f1ba600908b81c18110c74f</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Check outbound triggers</sys_name>
        <sys_overrides/>
        <sys_package display_value="SIAM Light" source="x_snc_siam_light">add64881295f42002e68eb689ad1b2ab</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="SIAM Light">add64881295f42002e68eb689ad1b2ab</sys_scope>
        <sys_update_name>sys_script_88bb28364f1ba600908b81c18110c74f</sys_update_name>
        <sys_updated_by>daniel.draes</sys_updated_by>
        <sys_updated_on>2016-11-28 15:46:43</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
</record_update>
